import{o as e,c as l,b as i}from"./app.157864df.js";const t='{"title":"让一个元素水平垂直居中","description":"","frontmatter":{},"headers":[{"level":3,"title":"让一个元素水平垂直居中","slug":"让一个元素水平垂直居中"}],"relativePath":"guide/html&css/7.让一个元素水平垂直居中.md","lastUpdated":1662433250873}',o={},a=[i('<h3 id="让一个元素水平垂直居中">让一个元素水平垂直居中</h3><ul><li><p><strong>水平居中</strong></p><ul><li><p>对于 行内元素 : <code>text-align: center</code>;</p></li><li><p>对于确定宽度的块级元素：</p><p>（1）width和margin实现。<code>margin: 0 auto</code>;</p><p>（2）绝对定位和margin-left: (父width - 子width）/2, 前提是父元素position: relative</p></li><li><p>对于宽度未知的块级元素</p><p>（1）<code>table标签配合margin左右auto实现水平居中</code>。使用table标签（或直接将块级元素设值为 display:table），再通过给该标签添加左右margin为auto。</p><p>（2）inline-block实现水平居中方法。display：inline-block和text-align:center实现水平居中。</p><p>（3）<code>绝对定位+transform</code>，translateX可以移动本身元素的50%。</p><p>（4）flex布局使用<code>justify-content:center</code></p></li></ul></li><li><p><strong>垂直居中</strong></p><ol><li>利用 <code>line-height</code> 实现居中，这种方法适合纯文字类</li><li>通过设置父容器 相对定位 ，子级设置 <code>绝对定位</code>，标签通过margin实现自适应居中</li><li>弹性布局 flex :父级设置display: flex; 子级设置margin为auto实现自适应居中</li><li>父级设置相对定位，子级设置绝对定位，并且通过位移 transform 实现</li><li><code>table 布局</code>，父级通过转换成表格形式，<code>然后子级设置 vertical-align 实现</code>。（需要注意的是：vertical-align: middle使用的前提条件是内联元素以及display值为table-cell的元素）。</li></ol></li></ul><p>传送门 ☞ <a href="https://juejin.cn/post/7008348524530106381" target="_blank" rel="noopener noreferrer"># 图解CSS水平垂直居中常见面试方法</a></p>',3)];o.render=function(i,t,o,n,r,p){return e(),l("div",null,a)};export default o;export{t as __pageData};
