import{o as e,c as t,b as l}from"./app.157864df.js";const r='{"title":"23-Vue实例挂载的过程中发生了什么?","description":"","frontmatter":{},"headers":[{"level":2,"title":"23-Vue实例挂载的过程中发生了什么?","slug":"_23-vue实例挂载的过程中发生了什么"},{"level":3,"title":"分析","slug":"分析"},{"level":3,"title":"回答范例","slug":"回答范例"},{"level":3,"title":"知其所以然","slug":"知其所以然"},{"level":3,"title":"可能的追问","slug":"可能的追问"}],"relativePath":"frame/vue/23-Vue实例挂载的过程中发生了什么.md","lastUpdated":1662433250873}',i={},o=[l('<h2 id="_23-vue实例挂载的过程中发生了什么">23-Vue实例挂载的过程中发生了什么?</h2><h3 id="分析">分析</h3><p>挂载过程完成了最重要的两件事：</p><ol><li>初始化</li><li>建立更新机制</li></ol><p>把这两件事说清楚即可！</p><h3 id="回答范例">回答范例</h3><ol><li>挂载过程指的是app.mount()过程，这个过程中整体上做了两件事：<strong>初始化</strong>和<strong>建立更新机制</strong></li><li>初始化会创建组件实例、初始化组件状态，创建各种响应式数据</li><li>建立更新机制这一步会立即执行一次组件更新函数，这会首次执行组件渲染函数并执行patch将前面获得vnode转换为dom；同时首次执行渲染函数会创建它内部响应式数据之间和组件更新函数之间的依赖关系，这使得以后数据变化时会执行对应的更新函数。</li></ol><h3 id="知其所以然">知其所以然</h3><p>测试代码，test-v3.html mount函数定义</p><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub1s.com%2Fvuejs%2Fcore%2Fblob%2FHEAD%2Fpackages%2Fruntime-core%2Fsrc%2FapiCreateApp.ts%23L277-L278" target="_blank" rel="noopener noreferrer">github1s.com/vuejs/core/…</a></p><p>首次render过程</p><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub1s.com%2Fvuejs%2Fcore%2Fblob%2FHEAD%2Fpackages%2Fruntime-core%2Fsrc%2Frenderer.ts%23L2303-L2304" target="_blank" rel="noopener noreferrer">github1s.com/vuejs/core/…</a></p><h3 id="可能的追问">可能的追问</h3><ol><li>响应式数据怎么创建</li><li>依赖关系如何建立</li></ol>',14)];i.render=function(l,r,i,s,n,p){return e(),t("div",null,o)};export default i;export{r as __pageData};
