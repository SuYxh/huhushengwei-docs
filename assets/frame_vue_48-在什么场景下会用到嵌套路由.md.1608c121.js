import{o as n,c as s,b as t}from"./app.157864df.js";const a='{"title":"在什么场景下会用到嵌套路由？","description":"","frontmatter":{},"headers":[{"level":2,"title":"在什么场景下会用到嵌套路由？","slug":"在什么场景下会用到嵌套路由？"},{"level":3,"title":"分析","slug":"分析"},{"level":3,"title":"体验","slug":"体验"},{"level":3,"title":"思路","slug":"思路"},{"level":3,"title":"回答范例","slug":"回答范例"},{"level":3,"title":"知其所以然","slug":"知其所以然"}],"relativePath":"frame/vue/48-在什么场景下会用到嵌套路由.md","lastUpdated":1662083353135}',e={},p=[t('<h2 id="在什么场景下会用到嵌套路由？">在什么场景下会用到嵌套路由？</h2><h3 id="分析">分析</h3><p>应用的有些界面是由多层级组件组合而来的，这种情况下，url各部分通常对应某个嵌套的组件，vue-router中就可以使用嵌套路由表示这种关系：<a href="https://link.juejin.cn/?target=https%3A%2F%2Frouter.vuejs.org%2Fguide%2Fessentials%2Fnested-routes.html" target="_blank" rel="noopener noreferrer">router.vuejs.org/guide/essen…</a></p><p><img src="https://qn.huat.xyz/mac/20220829004157.png" alt="image-20220628071220515"></p><hr><h3 id="体验">体验</h3><p>定义嵌套路由，对应上图嵌套关系：</p><div class="language-js"><pre><code><span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;/user/:id&#39;</span><span class="token punctuation">,</span>\n    component<span class="token operator">:</span> User<span class="token punctuation">,</span>\n    children<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token comment">// UserProfile 会被渲染在 User 组件中的 &lt;router-view&gt; 里</span>\n        path<span class="token operator">:</span> <span class="token string">&#39;profile&#39;</span><span class="token punctuation">,</span>\n        component<span class="token operator">:</span> UserProfile<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        <span class="token comment">// UserPosts 会被渲染在 User 组件中的 &lt;router-view&gt; 里</span>\n        path<span class="token operator">:</span> <span class="token string">&#39;posts&#39;</span><span class="token punctuation">,</span>\n        component<span class="token operator">:</span> UserPosts<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span>\n</code></pre></div><hr><h3 id="思路">思路</h3><ul><li>概念和使用场景</li><li>使用方式</li><li>实现原理</li></ul><hr><h3 id="回答范例">回答范例</h3><ul><li>平时开发中，应用的有些界面是由多层级组件组合而来的，这种情况下，url各部分通常对应某个嵌套的组件，vue-router中可以使用嵌套路由表示这种关系</li><li>表现形式是在两个路由间切换时，它们有公用的视图内容。此时通常提取一个父组件，内部放上<code>&lt;router-view&gt;</code>，从而形成物理上的嵌套，和逻辑上的嵌套对应起来</li><li>定义嵌套路由时使用<code>children</code>属性组织嵌套关系</li><li>原理上是在router-view组件内部判断当前router-view处于嵌套层级的深度，讲这个深度作为匹配组件数组matched的索引，获取对应渲染组件，渲染之</li></ul><hr><h3 id="知其所以然">知其所以然</h3><p>router-view获取自己所在的深度：默认0，加1之后传给后代，同时根据深度获取匹配路由。</p>',17)];e.render=function(t,a,e,o,l,r){return n(),s("div",null,p)};export default e;export{a as __pageData};
