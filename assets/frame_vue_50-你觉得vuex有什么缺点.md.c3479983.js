import{o as n,c as s,b as a}from"./app.157864df.js";const t='{"title":"你觉得vuex有什么缺点？","description":"","frontmatter":{},"headers":[{"level":2,"title":"你觉得vuex有什么缺点？","slug":"你觉得vuex有什么缺点？"},{"level":3,"title":"分析","slug":"分析"},{"level":3,"title":"体验","slug":"体验"},{"level":3,"title":"思路","slug":"思路"},{"level":3,"title":"回答范例","slug":"回答范例"},{"level":3,"title":"知其所以然","slug":"知其所以然"},{"level":3,"title":"","slug":""}],"relativePath":"frame/vue/50-你觉得vuex有什么缺点.md","lastUpdated":1662433250873}',e={},p=[a('<h2 id="你觉得vuex有什么缺点？">你觉得vuex有什么缺点？</h2><h3 id="分析">分析</h3><p>相较于redux，vuex已经相当简便好用了。但模块的使用比较繁琐，对ts支持也不好。</p><hr><h3 id="体验">体验</h3><p>使用模块：用起来比较繁琐，使用模式也不统一，基本上得不到类型系统的任何支持</p><div class="language-js"><pre><code><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  modules<span class="token operator">:</span> <span class="token punctuation">{</span>\n    a<span class="token operator">:</span> moduleA\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\nstore<span class="token punctuation">.</span>state<span class="token punctuation">.</span>a <span class="token comment">// -&gt; 要带上 moduleA 的key，内嵌模块的话会很长，不得不配合mapState使用</span>\nstore<span class="token punctuation">.</span>getters<span class="token punctuation">.</span>c <span class="token comment">// -&gt; moduleA里的getters，没有namespaced时又变成了全局的</span>\nstore<span class="token punctuation">.</span>getters<span class="token punctuation">[</span><span class="token string">&#39;a/c&#39;</span><span class="token punctuation">]</span> <span class="token comment">// -&gt; 有namespaced时要加path，使用模式又和state不一样</span>\nstore<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">)</span> <span class="token comment">// -&gt; 没有namespaced时变成了全局的，能同时触发多个子模块中同名mutation</span>\nstore<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;a/d&#39;</span><span class="token punctuation">)</span> <span class="token comment">// -&gt; 有namespaced时要加path，配合mapMutations使用感觉也没简化</span>\n</code></pre></div><hr><h3 id="思路">思路</h3><ul><li>先夸再贬</li><li>使用感受</li><li>解决方案</li></ul><hr><h3 id="回答范例">回答范例</h3><ul><li>vuex利用响应式，使用起来已经相当方便快捷了。但是在使用过程中感觉模块化这一块做的过于复杂，用的时候容易出错，还要经常查看文档</li><li>比如：访问state时要带上模块key，内嵌模块的话会很长，不得不配合mapState使用，加不加namespaced区别也很大，getters，mutations，actions这些默认是全局，加上之后必须用字符串类型的path来匹配，使用模式不统一，容易出错；对ts的支持也不友好，在使用模块时没有代码提示。</li><li>之前Vue2项目中用过<a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fchampionswimmer%2Fvuex-module-decorators" target="_blank" rel="noopener noreferrer">vuex-module-decorators</a>的解决方案，虽然类型支持上有所改善，但又要学一套新东西，增加了学习成本。pinia出现之后使用体验好了很多，Vue3 + pinia会是更好的组合。</li></ul><hr><h3 id="知其所以然">知其所以然</h3><p>下面我们来看看vuex中<code>store.state.x.y</code>这种嵌套的路径是怎么搞出来的。</p><p>首先是子模块安装过程：父模块状态<code>parentState</code>上面设置了子模块名称<code>moduleName</code>，值为当前模块<code>state</code>对象。放在上面的例子中相当于：<code>store.state[&#39;x&#39;] = moduleX.state</code>。此过程是递归的，那么<code>store.state.x.y</code>安装时就是：<code>store.state[&#39;x&#39;][&#39;y&#39;] = moduleY.state</code>。</p><div class="language-js"><pre><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isRoot <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>hot<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 获取父模块state</span>\n    <span class="token keyword">const</span> parentState <span class="token operator">=</span> <span class="token function">getNestedState</span><span class="token punctuation">(</span>rootState<span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token comment">// 获取子模块名称</span>\n    <span class="token keyword">const</span> moduleName <span class="token operator">=</span> path<span class="token punctuation">[</span>path<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>\n    store<span class="token punctuation">.</span><span class="token function">_withCommit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 把子模块state设置到父模块上</span>\n        parentState<span class="token punctuation">[</span>moduleName<span class="token punctuation">]</span> <span class="token operator">=</span> module<span class="token punctuation">.</span>state\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>这下大家明白了吧！</p><blockquote><p>源码地址：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub1s.com%2Fvuejs%2Fvuex%2Fblob%2FHEAD%2Fsrc%2Fstore-util.js%23L102-L115" target="_blank" rel="noopener noreferrer">github1s.com/vuejs/vuex/…</a></p></blockquote><h3 id=""></h3>',21)];e.render=function(a,t,e,o,c,l){return n(),s("div",null,p)};export default e;export{t as __pageData};
