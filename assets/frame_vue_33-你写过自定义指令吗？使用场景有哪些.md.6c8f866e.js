import{o as n,c as s,b as a}from"./app.157864df.js";const t='{"title":"33-你写过自定义指令吗？使用场景有哪些？","description":"","frontmatter":{},"headers":[{"level":2,"title":"33-你写过自定义指令吗？使用场景有哪些？","slug":"_33-你写过自定义指令吗？使用场景有哪些？"},{"level":3,"title":"分析","slug":"分析"},{"level":3,"title":"体验","slug":"体验"},{"level":3,"title":"思路","slug":"思路"},{"level":3,"title":"回答范例","slug":"回答范例"},{"level":3,"title":"知其所以然","slug":"知其所以然"}],"relativePath":"frame/vue/33-你写过自定义指令吗？使用场景有哪些.md","lastUpdated":1662083353135}',e={},l=[a('<h2 id="_33-你写过自定义指令吗？使用场景有哪些？">33-你写过自定义指令吗？使用场景有哪些？</h2><h3 id="分析">分析</h3><p>这是一道API题，我们可能写的自定义指令少，但是我们用的多呀，多举几个例子就行。</p><hr><h3 id="体验">体验</h3><p>定义一个包含类似组件生命周期钩子的对象，钩子函数会接收指令挂钩的dom元素：</p><div class="language-javascript"><pre><code><span class="token keyword">const</span> focus <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">mounted</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> el<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  directives<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// enables v-focus in template</span>\n    focus\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token operator">&lt;</span>input v<span class="token operator">-</span>focus <span class="token operator">/</span><span class="token operator">&gt;</span>\n复制代码\n<span class="token operator">&lt;</span>input v<span class="token operator">-</span>focus <span class="token operator">/</span><span class="token operator">&gt;</span>\n复制代码\n</code></pre></div><hr><h3 id="思路">思路</h3><ol><li>定义</li><li>何时用</li><li>如何用</li><li>常用指令</li><li>vue3变化</li></ol><hr><h3 id="回答范例">回答范例</h3><ol><li>Vue有一组默认指令，比如<code>v-mode</code>l或<code>v-for</code>，同时Vue也允许用户注册自定义指令来扩展Vue能力</li><li>自定义指令主要完成一些可复用低层级DOM操作</li><li>使用自定义指令分为定义、注册和使用三步： <ul><li>定义自定义指令有两种方式：对象和函数形式，前者类似组件定义，有各种生命周期；后者只会在mounted和updated时执行</li><li>注册自定义指令类似组件，可以使用app.directive()全局注册，使用{directives:{xxx}}局部注册</li><li>使用时在注册名称前加上v-即可，比如v-focus</li></ul></li><li>我在项目中常用到一些自定义指令，例如： <ul><li>复制粘贴 v-copy</li><li>长按 v-longpress</li><li>防抖 v-debounce</li><li>图片懒加载 v-lazy</li><li>按钮权限 v-premission</li><li>页面水印 v-waterMarker</li><li>拖拽指令 v-draggable</li></ul></li><li>vue3中指令定义发生了比较大的变化，主要是钩子的名称保持和组件一致，这样开发人员容易记忆，不易犯错。另外在v3.2之后，可以在setup中以一个小写v开头方便的定义自定义指令，更简单了！</li></ol><h3 id="知其所以然">知其所以然</h3><p>编译后的自定义指令会被withDirective函数装饰，进一步处理生成的vnode，添加到特定属性中。</p><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fsfc.vuejs.org%2F%23eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cD5cbmltcG9ydCB7IHJlZiB9IGZyb20gJ3Z1ZSdcblxuY29uc3QgbXNnID0gcmVmKCdIZWxsbyBXb3JsZCEnKVxuXG5jb25zdCB2Rm9jdXMgPSB7XG4gIG1vdW50ZWQoZWwpIHtcbiAgICAvLyDojrflj5ZpbnB1dO%2B8jOW5tuiwg%2BeUqOWFtmZvY3VzKCnmlrnms5VcbiAgICBlbC5mb2N1cygpXG4gIH1cbn1cbjwvc2NyaXB0PlxuXG48dGVtcGxhdGU%2BXG4gIDxoMT57eyBtc2cgfX08L2gxPlxuICA8aW5wdXQgdi1tb2RlbD1cIm1zZ1wiIHYtZm9jdXM%2BXG48L3RlbXBsYXRlPiIsImltcG9ydC1tYXAuanNvbiI6IntcbiAgXCJpbXBvcnRzXCI6IHtcbiAgICBcInZ1ZVwiOiBcImh0dHBzOi8vc2ZjLnZ1ZWpzLm9yZy92dWUucnVudGltZS5lc20tYnJvd3Nlci5qc1wiXG4gIH1cbn0ifQ%3D%3D" target="_blank" rel="noopener noreferrer">sfc.vuejs.org/#eyJBcHAudn…</a></p>',16)];e.render=function(a,t,e,p,o,i){return n(),s("div",null,l)};export default e;export{t as __pageData};
