import{o as n,c as s,b as a}from"./app.157864df.js";const p='{"title":"插入排序","description":"","frontmatter":{},"headers":[{"level":2,"title":"插入排序","slug":"插入排序"},{"level":3,"title":"代码","slug":"代码"}],"relativePath":"algorithm/search/3.插入排序.md","lastUpdated":1662433250869}',t={},o=[a('<h2 id="插入排序">插入排序</h2><p><img src="https://qn.huat.xyz/mac/20220828153254.png" alt="image-20220828153254745"></p><h3 id="代码">代码</h3><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">insertSort</span><span class="token punctuation">(</span>arr<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 1、准备一个新数组，用来存储抓到手里的牌</span>\n  <span class="token keyword">const</span> handle<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n  <span class="token comment">// 2、开始先抓一张牌进来</span>\n  handle<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n  <span class="token comment">// 3、从第二项依次抓牌，一直到把牌抓光</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// A 是新抓的牌</span>\n    <span class="token keyword">const</span> <span class="token constant">A</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>\n\n    <span class="token comment">// 和手中的牌进行对比（从后向前）</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> handle<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> <span class="token constant">B</span> <span class="token operator">=</span> handle<span class="token punctuation">[</span>j<span class="token punctuation">]</span>\n      <span class="token comment">// 如果 A 要比 B 大，则把 A 放在 B 的后面</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">A</span> <span class="token operator">&gt;</span> <span class="token constant">B</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        handle<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token punctuation">)</span>\n        <span class="token keyword">break</span>\n      <span class="token punctuation">}</span>\n      <span class="token comment">// 已经比较到第一项，把新牌插入到第一项</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        handle<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token constant">A</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> handle\n<span class="token punctuation">}</span>\n</code></pre></div>',4)];t.render=function(a,p,t,e,c,l){return n(),s("div",null,o)};export default t;export{p as __pageData};
