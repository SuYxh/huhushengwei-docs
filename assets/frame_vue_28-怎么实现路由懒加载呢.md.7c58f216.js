import{o as n,c as s,b as e}from"./app.157864df.js";const t='{"title":"怎么实现路由懒加载呢？","description":"","frontmatter":{},"headers":[{"level":2,"title":"怎么实现路由懒加载呢？","slug":"怎么实现路由懒加载呢？"},{"level":3,"title":"分析","slug":"分析"},{"level":3,"title":"思路","slug":"思路"},{"level":3,"title":"回答范例","slug":"回答范例"},{"level":3,"title":"知其所以然","slug":"知其所以然"}],"relativePath":"frame/vue/28-怎么实现路由懒加载呢.md","lastUpdated":1662433250873}',a={},o=[e('<h2 id="怎么实现路由懒加载呢？">怎么实现路由懒加载呢？</h2><h3 id="分析">分析</h3><p>这是一道应用题。当打包应用时，JavaScript 包会变得非常大，影响页面加载。如果我们能把不同路由对应的组件分割成不同的代码块，然后当路由被访问时才加载对应组件，这样就会更加高效。</p><div class="language-js"><pre><code><span class="token comment">// 将</span>\n<span class="token comment">// import UserDetails from &#39;./views/UserDetails&#39;</span>\n<span class="token comment">// 替换为</span>\n<span class="token keyword">const</span> <span class="token function-variable function">UserDetails</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;./views/UserDetails&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  routes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;/users/:id&#39;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> UserDetails <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n复制代码\n</code></pre></div><p>参考<a href="https://link.juejin.cn/?target=https%3A%2F%2Frouter.vuejs.org%2Fzh%2Fguide%2Fadvanced%2Flazy-loading.html" target="_blank" rel="noopener noreferrer">router.vuejs.org/zh/guide/ad…</a></p><hr><h3 id="思路">思路</h3><ol><li>必要性</li><li>何时用</li><li>怎么用</li><li>使用细节</li></ol><hr><h3 id="回答范例">回答范例</h3><ol><li><p>当打包构建应用时，JavaScript 包会变得非常大，影响页面加载。利用路由懒加载我们能把不同路由对应的组件分割成不同的代码块，然后当路由被访问的时候才加载对应组件，这样会更加高效，是一种优化手段。</p></li><li><p>一般来说，对所有的路由<strong>都使用动态导入</strong>是个好主意。</p></li><li><p>给<code>component</code>选项配置一个返回 Promise 组件的函数就可以定义懒加载路由。例如：</p><p><code>{ path: &#39;/users/:id&#39;, component: () =&gt; import(&#39;./views/UserDetails&#39;) }</code></p></li><li><p>结合注释<code>() =&gt; import(/* webpackChunkName: &quot;group-user&quot; */ &#39;./UserDetails.vue&#39;)</code>可以做webpack代码分块</p><p>vite中结合<a href="https://link.juejin.cn/?target=https%3A%2F%2Frouter.vuejs.org%2Fzh%2Fguide%2Fadvanced%2Flazy-loading.html%23%E4%BD%BF%E7%94%A8-vite" target="_blank" rel="noopener noreferrer">rollupOptions</a>定义分块</p></li><li><p>路由中不能使用异步组件</p></li></ol><hr><h3 id="知其所以然">知其所以然</h3><p><code>component</code> (和 <code>components</code>) 配置如果接收一个返回 Promise 组件的函数，Vue Router <strong>只会在第一次进入页面时才会获取这个函数</strong>，然后使用缓存数据。</p><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub1s.com%2Fvuejs%2Frouter%2Fblob%2FHEAD%2Fsrc%2FnavigationGuards.ts%23L292-L293" target="_blank" rel="noopener noreferrer">github1s.com/vuejs/route…</a></p>',15)];a.render=function(e,t,a,p,r,l){return n(),s("div",null,o)};export default a;export{t as __pageData};
