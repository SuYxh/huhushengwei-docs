import{o as e,c as o,b as d}from"./app.157864df.js";const i='{"title":"JS 中 this 的五种情况","description":"","frontmatter":{},"headers":[{"level":3,"title":"JS 中 this 的五种情况","slug":"js-中-this-的五种情况"}],"relativePath":"guide/js/7.JS 中 this 的五种情况.md","lastUpdated":1662083353139}',t={},c=[d('<h3 id="js-中-this-的五种情况">JS 中 this 的五种情况</h3><ol><li>作为普通函数执行时，<code>this</code>指向<code>window</code>。</li><li>当函数作为对象的方法被调用时，<code>this</code>就会指向<code>该对象</code>。</li><li>构造器调用，<code>this</code>指向<code>返回的这个对象</code>。</li><li>箭头函数 箭头函数的<code>this</code>绑定看的是<code>this所在函数定义在哪个对象下</code>，就绑定哪个对象。如果有嵌套的情况，则this绑定到最近的一层对象上。</li><li>基于Function.prototype上的 <code>apply 、 call 和 bind </code>调用模式，这三个方法都可以显示的指定调用函数的 this 指向。<code>apply</code>接收参数的是数组，<code>call</code>接受参数列表，`` bind<code>方法通过传入一个对象，返回一个</code> this <code>绑定了传入对象的新函数。这个函数的 </code>this<code>指向除了使用</code>new `时会被改变，其他情况下都不会改变。若为空默认是指向全局对象window。</li></ol>',2)];t.render=function(d,i,t,l,s,h){return e(),o("div",null,c)};export default t;export{i as __pageData};
