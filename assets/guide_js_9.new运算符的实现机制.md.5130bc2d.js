import{o as e,c as t,b as o}from"./app.157864df.js";const l='{"title":"new运算符的实现机制","description":"","frontmatter":{},"headers":[{"level":3,"title":"new运算符的实现机制","slug":"new运算符的实现机制"}],"relativePath":"guide/js/9.new运算符的实现机制.md","lastUpdated":1662433250873}',d={},i=[o('<h3 id="new运算符的实现机制">new运算符的实现机制</h3><ol><li>首先创建了一个新的<code>空对象</code></li><li><code>设置原型</code>，将对象的原型设置为函数的<code>prototype</code>对象。</li><li>让函数的<code>this</code>指向这个对象，执行构造函数的代码（为这个新对象添加属性）</li><li>判断函数的返回值类型，如果是值类型，返回创建的对象。如果是引用类型，就返回这个引用类型的对象。</li></ol>',2)];d.render=function(o,l,d,n,r,c){return e(),t("div",null,i)};export default d;export{l as __pageData};
