import{o as e,c as o,b as t}from"./app.157864df.js";const a='{"title":"如何避免重绘或者重排？","description":"","frontmatter":{},"headers":[{"level":3,"title":"如何避免重绘或者重排？","slug":"如何避免重绘或者重排？"}],"relativePath":"guide/browser/5.如何避免重绘或者重排.md","lastUpdated":1662083353135}',l={},p=[t('<h3 id="如何避免重绘或者重排？">如何避免重绘或者重排？</h3><ol><li><p><code>集中改变样式</code>，不要一条一条地修改 DOM 的样式。</p></li><li><p>不要把 DOM 结点的属性值放在循环里当成循环里的变量。</p></li><li><p>为动画的 HTML 元件使用 <code>fixed</code> 或 <code>absoult</code> 的 <code>position</code>，那么修改他们的 CSS 是不会 reflow 的。</p></li><li><p>不使用 table 布局。因为可能很小的一个小改动会造成整个 table 的重新布局。</p></li><li><p>尽量只修改<code>position：absolute</code>或<code>fixed</code>元素，对其他元素影响不大</p></li><li><p>动画开始<code>GPU</code>加速，<code>translate</code>使用<code>3D</code>变化</p></li><li><p>提升为合成层</p><p>将元素提升为合成层有以下优点：</p><ul><li>合成层的位图，会交由 GPU 合成，比 CPU 处理要快</li><li>当需要 repaint 时，只需要 repaint 本身，不会影响到其他的层</li><li>对于 transform 和 opacity 效果，不会触发 layout 和 paint</li></ul><p>提升合成层的最好方式是使用 CSS 的 will-change 属性：</p></li></ol><div class="language-css"><pre><code><span class="token selector">#target</span> <span class="token punctuation">{</span>\n  <span class="token property">will-change</span><span class="token punctuation">:</span> transform<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><blockquote><p>关于合成层的详解请移步<a href="https://link.juejin.cn/?target=http%3A%2F%2Ftaobaofed.org%2Fblog%2F2016%2F04%2F25%2Fperformance-composite%2F" target="_blank" rel="noopener noreferrer">无线性能优化：Composite</a></p></blockquote>',4)];l.render=function(t,a,l,n,i,s){return e(),o("div",null,p)};export default l;export{a as __pageData};
