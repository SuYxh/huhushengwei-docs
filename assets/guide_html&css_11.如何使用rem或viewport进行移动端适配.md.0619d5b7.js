import{o as e,c as r,b as t}from"./app.157864df.js";const p='{"title":"如何使用rem或viewport进行移动端适配","description":"","frontmatter":{},"headers":[{"level":3,"title":"如何使用rem或viewport进行移动端适配","slug":"如何使用rem或viewport进行移动端适配"}],"relativePath":"guide/html&css/11.如何使用rem或viewport进行移动端适配.md","lastUpdated":1662083353135}',i={},l=[t('<h3 id="如何使用rem或viewport进行移动端适配">如何使用rem或viewport进行移动端适配</h3><p><strong>rem适配原理：</strong></p><p>改变了一个元素在不同设备上占据的css像素的个数</p><p>rem适配的优缺点</p><ul><li>优点：没有破坏完美视口</li><li>缺点：px值转换rem太过于复杂(下面我们使用less来解决这个问题)</li></ul><p><strong>viewport适配的原理</strong></p><p>viewport适配方案中，每一个元素在不同设备上占据的css像素的个数是一样的。但是css像素和物理像素的比例是不一样的，等比的</p><p>viewport适配的优缺点</p><ul><li>在我们设计图上所量取的大小即为我们可以设置的像素大小，即所量即所设</li><li>缺点破坏完美视口</li></ul>',9)];i.render=function(t,p,i,s,o,m){return e(),r("div",null,l)};export default i;export{p as __pageData};
