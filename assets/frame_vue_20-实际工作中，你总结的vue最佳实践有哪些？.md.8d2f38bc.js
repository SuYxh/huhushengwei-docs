import{o as e,c as t,b as l}from"./app.157864df.js";const r='{"title":"20-实际工作中，你总结的vue最佳实践有哪些？","description":"","frontmatter":{},"headers":[{"level":2,"title":"20-实际工作中，你总结的vue最佳实践有哪些？","slug":"_20-实际工作中，你总结的vue最佳实践有哪些？"},{"level":3,"title":"思路","slug":"思路"},{"level":3,"title":"回答范例","slug":"回答范例"},{"level":2,"title":"","slug":""}],"relativePath":"frame/vue/20-实际工作中，你总结的vue最佳实践有哪些？.md","lastUpdated":1662433250873}',i={},s=[l('<h2 id="_20-实际工作中，你总结的vue最佳实践有哪些？">20-实际工作中，你总结的vue最佳实践有哪些？</h2><p>看到这样的题目，可以用以下图片来回答：</p><p><img src="https://qn.huat.xyz/mac/20220828184838.awebp" alt="img"></p><hr><h3 id="思路">思路</h3><p>查看vue官方文档：</p><p>风格指南：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fvuejs.org%2Fstyle-guide%2F" target="_blank" rel="noopener noreferrer">vuejs.org/style-guide…</a></p><p>性能：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fvuejs.org%2Fguide%2Fbest-practices%2Fperformance.html%23overview" target="_blank" rel="noopener noreferrer">vuejs.org/guide/best-…</a></p><p>安全：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fvuejs.org%2Fguide%2Fbest-practices%2Fsecurity.html" target="_blank" rel="noopener noreferrer">vuejs.org/guide/best-…</a></p><p>访问性：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fvuejs.org%2Fguide%2Fbest-practices%2Faccessibility.html" target="_blank" rel="noopener noreferrer">vuejs.org/guide/best-…</a></p><p>发布：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fvuejs.org%2Fguide%2Fbest-practices%2Fproduction-deployment.html" target="_blank" rel="noopener noreferrer">vuejs.org/guide/best-…</a></p><hr><h3 id="回答范例">回答范例</h3><p>我从编码风格、性能、安全等方面说几条：</p><ol><li>编码风格方面： <ul><li>命名组件时使用“多词”风格避免和HTML元素冲突</li><li>使用“细节化”方式定义属性而不是只有一个属性名</li><li>属性名声明时使用“驼峰命名”，模板或jsx中使用“肉串命名”</li><li>使用v-for时务必加上key，且不要跟v-if写在一起</li></ul></li><li>性能方面： <ul><li>路由懒加载减少应用尺寸</li><li>利用SSR减少首屏加载时间</li><li>利用v-once渲染那些不需要更新的内容</li><li>一些长列表可以利用虚拟滚动技术避免内存过度占用</li><li>对于深层嵌套对象的大数组可以使用shallowRef或shallowReactive降低开销</li><li>避免不必要的组件抽象</li></ul></li></ol><hr><ol><li>安全： <ul><li>不使用不可信模板，例如使用用户输入拼接模板：<code>template: &lt;div&gt; + userProvidedString + &lt;/div&gt;</code></li><li>小心使用v-html，:url，:style等，避免html、url、样式等注入</li></ul></li><li>等等......</li></ol><hr><h2 id=""></h2>',19)];i.render=function(l,r,i,u,a,o){return e(),t("div",null,s)};export default i;export{r as __pageData};
