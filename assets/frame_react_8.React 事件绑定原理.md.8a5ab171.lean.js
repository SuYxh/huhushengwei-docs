import{o as t,c as e,a,d as c}from"./app.157864df.js";const n='{"title":"React 事件绑定原理","description":"","frontmatter":{},"headers":[{"level":3,"title":"React 事件绑定原理","slug":"react-事件绑定原理"}],"relativePath":"frame/react/8.React 事件绑定原理.md","lastUpdated":1662433250869}',l={},r=[a("h3",{id:"react-事件绑定原理"},"React 事件绑定原理",-1),a("p",null,[c("React并不是将click事件绑在该div的真实DOM上，而是"),a("code",null,"在document处监听所有支持的事件"),c("，当事件发生并冒泡至document处时，React将事件内容封装并交由真正的处理函数运行。这样的方式不仅减少了内存消耗，还能在组件挂载销毁时统一订阅和移除事件。 另外冒泡到 document 上的事件也不是原生浏览器事件，而是 React 自己实现的合成事件（SyntheticEvent）。因此我们如果不想要事件冒泡的话，调用 event.stopPropagation 是无效的，而应该调用 "),a("code",null,"event.preventDefault"),c("。")],-1),a("p",null,[a("img",{src:"https://qn.huat.xyz/mac/20220828112243.awebp",alt:"react事件绑定原理"})],-1)];l.render=function(a,c,n,l,d,o){return t(),e("div",null,r)};export default l;export{n as __pageData};
