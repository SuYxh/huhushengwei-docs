import{_ as n,e as s,o as a,Q as t}from"./plugin-vue_export-helper.8dc630d2.js";const g='{"title":"\u683C\u5F0F\u5316\u91D1\u989D","description":"","frontmatter":{},"headers":[{"level":3,"title":"\u4F7F\u7528\u6B63\u5219\u8868\u8FBE\u5F0F","slug":"\u4F7F\u7528\u6B63\u5219\u8868\u8FBE\u5F0F"},{"level":3,"title":"\u975E\u6B63\u5219","slug":"\u975E\u6B63\u5219"}],"relativePath":"guide/func/1.\u683C\u5F0F\u5316\u91D1\u989D.md","lastUpdated":1676203931617}',p={},o=t(`<h1 id="\u683C\u5F0F\u5316\u91D1\u989D">\u683C\u5F0F\u5316\u91D1\u989D</h1><h3 id="\u4F7F\u7528\u6B63\u5219\u8868\u8FBE\u5F0F">\u4F7F\u7528\u6B63\u5219\u8868\u8FBE\u5F0F</h3><div class="language-js"><pre><code><span class="token comment">/**
 * @description \u683C\u5F0F\u5316\u91D1\u989D
 * @param {String | Number} amount - \u91D1\u989D
 * @param {Number} decimalDigits - \u4FDD\u7559\u7684\u5C0F\u6570\u4F4D\u6570
 * @return {String}
 */</span>
<span class="token keyword">function</span> <span class="token function">formatAmount</span><span class="token punctuation">(</span><span class="token parameter">amount<span class="token punctuation">,</span> decimalDigits <span class="token operator">=</span> <span class="token number">0</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> amountStr <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span>decimalDigits<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\B(?=(?:\\d{3})+$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
  <span class="token comment">// \u662F\u5426\u662F\u5C0F\u6570</span>
  <span class="token keyword">const</span> isDecimal <span class="token operator">=</span> amountStr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isDecimal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6574\u6570\u90E8\u5206</span>
    <span class="token keyword">const</span> integerPart <span class="token operator">=</span> amountStr<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> amountStr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">// \u5C0F\u6570\u90E8\u5206</span>
    <span class="token keyword">const</span> decimalPart <span class="token operator">=</span> amountStr<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>
      amountStr<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
      amountStr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>integerPart<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>reg<span class="token punctuation">,</span> <span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>decimalPart<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> amountStr<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>reg<span class="token punctuation">,</span> <span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u975E\u6B63\u5219">\u975E\u6B63\u5219</h3><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">formatCash</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> str
    <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> next<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">(</span>index <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">?</span> next <span class="token operator">:</span> next <span class="token operator">+</span> <span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> prev
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">formatCash</span><span class="token punctuation">(</span><span class="token string">&#39;1234567890&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 1,234,567,890</span>
</code></pre></div>`,5),e=[o];function c(u,l,i,k,r,m){return a(),s("div",null,e)}var f=n(p,[["render",c]]);export{g as __pageData,f as default};
