import{o as e,c as r,b as t}from"./app.157864df.js";const l='{"title":"43-router-link和router-view是如何起作用的？","description":"","frontmatter":{},"headers":[{"level":2,"title":"43-router-link和router-view是如何起作用的？","slug":"_43-router-link和router-view是如何起作用的？"},{"level":3,"title":"分析","slug":"分析"},{"level":3,"title":"思路","slug":"思路"},{"level":3,"title":"回答范例","slug":"回答范例"},{"level":3,"title":"知其所以然","slug":"知其所以然"}],"relativePath":"frame/vue/43-router-link和router-view是如何起作用的.md","lastUpdated":1662433250873}',i={},o=[t('<h2 id="_43-router-link和router-view是如何起作用的？">43-router-link和router-view是如何起作用的？</h2><h3 id="分析">分析</h3><p>vue-router中两个重要组件<code>router-link</code>和<code>router-view</code>，分别起到导航作用和内容渲染作用，但是回答如何生效还真有一定难度哪！</p><h3 id="思路">思路</h3><ul><li>两者作用</li><li>阐述使用方式</li><li>原理说明</li></ul><h3 id="回答范例">回答范例</h3><ul><li>vue-router中两个重要组件<code>router-link</code>和<code>router-view</code>，分别起到路由导航作用和组件内容渲染作用</li><li>使用中router-link默认生成一个a标签，设置to属性定义跳转path。实际上也可以通过custom和插槽自定义最终的展现形式。router-view是要显示组件的占位组件，可以嵌套，对应路由配置的嵌套关系，配合name可以显示具名组件，起到更强的布局作用。</li><li>router-link组件内部根据custom属性判断如何渲染最终生成节点，内部提供导航方法navigate，用户点击之后实际调用的是该方法，此方法最终会修改响应式的路由变量，然后重新去routes匹配出数组结果，router-view则根据其所处深度deep在匹配数组结果中找到对应的路由并获取组件，最终将其渲染出来。</li></ul><h3 id="知其所以然">知其所以然</h3><ul><li>RouterLink定义</li></ul><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub1s.com%2Fvuejs%2Frouter%2Fblob%2FHEAD%2Fsrc%2FRouterLink.ts%23L184-L185" target="_blank" rel="noopener noreferrer">github1s.com/vuejs/route…</a></p><ul><li>RouterView定义</li></ul><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub1s.com%2Fvuejs%2Frouter%2Fblob%2FHEAD%2Fsrc%2FRouterView.ts%23L43-L44" target="_blank" rel="noopener noreferrer">github1s.com/vuejs/route…</a></p>',12)];i.render=function(t,l,i,u,n,s){return e(),r("div",null,o)};export default i;export{l as __pageData};
