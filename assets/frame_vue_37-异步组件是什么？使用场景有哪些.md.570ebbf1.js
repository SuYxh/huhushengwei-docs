import{o as n,c as s,b as a}from"./app.157864df.js";const e='{"title":"37-异步组件是什么？使用场景有哪些？","description":"","frontmatter":{},"headers":[{"level":2,"title":"37-异步组件是什么？使用场景有哪些？","slug":"_37-异步组件是什么？使用场景有哪些？"},{"level":3,"title":"分析","slug":"分析"},{"level":3,"title":"体验","slug":"体验"},{"level":3,"title":"思路","slug":"思路"},{"level":3,"title":"范例","slug":"范例"},{"level":3,"title":"知其所以然","slug":"知其所以然"}],"relativePath":"frame/vue/37-异步组件是什么？使用场景有哪些.md","lastUpdated":1662433250873}',t={},o=[a('<h2 id="_37-异步组件是什么？使用场景有哪些？">37-异步组件是什么？使用场景有哪些？</h2><h3 id="分析">分析</h3><p>因为异步路由的存在，我们使用异步组件的次数比较少，因此还是有必要两者的不同。</p><h3 id="体验">体验</h3><p>大型应用中，我们需要分割应用为更小的块，并且在需要组件时再加载它们。</p><blockquote><p>In large applications, we may need to divide the app into smaller chunks and only load a component from the server when it&#39;s needed.</p></blockquote><div class="language-javascript"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineAsyncComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token comment">// defineAsyncComponent定义异步组件</span>\n<span class="token keyword">const</span> AsyncComp <span class="token operator">=</span> <span class="token function">defineAsyncComponent</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 加载函数返回Promise</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token comment">// ...可以从服务器加载组件</span>\n    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token comment">/* loaded component */</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// 借助打包工具实现ES模块动态导入</span>\n<span class="token keyword">const</span> AsyncComp <span class="token operator">=</span> <span class="token function">defineAsyncComponent</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>\n  <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;./components/MyComponent.vue&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span>\n</code></pre></div><hr><h3 id="思路">思路</h3><ol><li>异步组件作用</li><li>何时使用异步组件</li><li>使用细节</li><li>和路由懒加载的不同</li></ol><hr><h3 id="范例">范例</h3><ol><li>在大型应用中，我们需要分割应用为更小的块，并且在需要组件时再加载它们。</li><li>我们不仅可以在路由切换时懒加载组件，还可以在页面组件中继续使用异步组件，从而实现更细的分割粒度。</li><li>使用异步组件最简单的方式是直接给defineAsyncComponent指定一个loader函数，结合ES模块动态导入函数import可以快速实现。我们甚至可以指定loadingComponent和errorComponent选项从而给用户一个很好的加载反馈。另外Vue3中还可以结合Suspense组件使用异步组件。</li><li>异步组件容易和路由懒加载混淆，实际上不是一个东西。异步组件不能被用于定义懒加载路由上，处理它的是vue框架，处理路由组件加载的是vue-router。但是可以在懒加载的路由组件中使用异步组件。</li></ol><hr><h3 id="知其所以然">知其所以然</h3><p>defineAsyncComponent定义了一个高阶组件，返回一个包装组件。包装组件根据加载器的状态决定渲染什么内容。</p><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub1s.com%2Fvuejs%2Fcore%2Fblob%2FHEAD%2Fpackages%2Fruntime-core%2Fsrc%2FapiAsyncComponent.ts%23L43-L44" target="_blank" rel="noopener noreferrer">github1s.com/vuejs/core/…</a></p>',17)];t.render=function(a,e,t,p,l,c){return n(),s("div",null,o)};export default t;export{e as __pageData};
