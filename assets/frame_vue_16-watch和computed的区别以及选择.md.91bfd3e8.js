import{o as t,c as n,b as a}from"./app.157864df.js";const e='{"title":"16-watch和computed的区别以及选择?","description":"","frontmatter":{},"headers":[{"level":2,"title":"16-watch和computed的区别以及选择?","slug":"_16-watch和computed的区别以及选择"},{"level":3,"title":"思路分析","slug":"思路分析"},{"level":3,"title":"回答范例","slug":"回答范例"},{"level":3,"title":"回答范例","slug":"回答范例-1"},{"level":3,"title":"可能追问","slug":"可能追问"},{"level":3,"title":"知其所以然","slug":"知其所以然"},{"level":2,"title":"","slug":""}],"relativePath":"frame/vue/16-watch和computed的区别以及选择.md","lastUpdated":1662433250869}',s={},p=[a('<h2 id="_16-watch和computed的区别以及选择">16-watch和computed的区别以及选择?</h2><p>两个重要API，反应应聘者熟练程度。</p><h3 id="思路分析">思路分析</h3><ol><li>先看<a href="https://link.juejin.cn/?target=https%3A%2F%2Fvuejs.org%2Fapi%2Freactivity-core.html%23computed" target="_blank" rel="noopener noreferrer">computed</a>, <a href="https://link.juejin.cn/?target=https%3A%2F%2Fvuejs.org%2Fapi%2Freactivity-core.html%23watch" target="_blank" rel="noopener noreferrer">watch</a>两者定义，列举使用上的差异</li><li>列举使用场景上的差异，如何选择</li><li>使用细节、注意事项</li><li>vue3变化</li></ol><hr><p>computed特点：具有响应式的返回值</p><div class="language-js"><pre><code><span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> plusOne <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> count<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>\n复制代码\n</code></pre></div><p>watch特点：侦测变化，执行回调</p><div class="language-js"><pre><code><span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> count<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token function">watch</span><span class="token punctuation">(</span>\n  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>count<span class="token punctuation">,</span>\n  <span class="token punctuation">(</span><span class="token parameter">count<span class="token punctuation">,</span> prevCount</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token comment">/* ... */</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">)</span>\n复制代码\n</code></pre></div><hr><h3 id="回答范例">回答范例</h3><ol><li>计算属性可以<strong>从组件数据派生出新数据</strong>，最常见的使用方式是设置一个函数，返回计算之后的结果，computed和methods的差异是它具备缓存性，如果依赖项不变时不会重新计算。侦听器<strong>可以侦测某个响应式数据的变化并执行副作用</strong>，常见用法是传递一个函数，执行副作用，watch没有返回值，但可以执行异步操作等复杂逻辑。</li><li>计算属性常用场景是简化行内模板中的复杂表达式，模板中出现太多逻辑会是模板变得臃肿不易维护。侦听器常用场景是状态变化之后做一些额外的DOM操作或者异步操作。选择采用何用方案时首先看是否需要派生出新值，基本能用计算属性实现的方式首选计算属性。</li><li>使用过程中有一些细节，比如计算属性也是可以传递对象，成为既可读又可写的计算属性。watch可以传递对象，设置deep、immediate等选项。</li><li>vue3中watch选项发生了一些变化，例如不再能侦测一个点操作符之外的字符串形式的表达式； reactivity API中新出现了watch、watchEffect可以完全替代目前的watch选项，且功能更加强大。</li></ol><hr><h3 id="回答范例-1">回答范例</h3><ol><li>计算属性可以<strong>从组件数据派生出新数据</strong>，最常见的使用方式是设置一个函数，返回计算之后的结果，computed和methods的差异是它具备缓存性，如果依赖项不变时不会重新计算。侦听器<strong>可以侦测某个响应式数据的变化并执行副作用</strong>，常见用法是传递一个函数，执行副作用，watch没有返回值，但可以执行异步操作等复杂逻辑。</li><li>计算属性常用场景是简化行内模板中的复杂表达式，模板中出现太多逻辑会是模板变得臃肿不易维护。侦听器常用场景是状态变化之后做一些额外的DOM操作或者异步操作。选择采用何用方案时首先看是否需要派生出新值，基本能用计算属性实现的方式首选计算属性。</li><li>使用过程中有一些细节，比如计算属性也是可以传递对象，成为既可读又可写的计算属性。watch可以传递对象，设置deep、immediate等选项。</li><li>vue3中watch选项发生了一些变化，例如不再能侦测一个点操作符之外的字符串形式的表达式； reactivity API中新出现了watch、watchEffect可以完全替代目前的watch选项，且功能更加强大。</li></ol><hr><h3 id="可能追问">可能追问</h3><ol><li>watch会不会立即执行？</li><li>watch 和 watchEffect有什么差异</li></ol><hr><h3 id="知其所以然">知其所以然</h3><p>computed的实现</p><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub1s.com%2Fvuejs%2Fcore%2Fblob%2FHEAD%2Fpackages%2Freactivity%2Fsrc%2Fcomputed.ts%23L79-L80" target="_blank" rel="noopener noreferrer">github1s.com/vuejs/core/…</a></p><p>ComputedRefImpl</p><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub1s.com%2Fvuejs%2Fcore%2Fblob%2FHEAD%2Fpackages%2Freactivity%2Fsrc%2Fcomputed.ts%23L26-L27" target="_blank" rel="noopener noreferrer">github1s.com/vuejs/core/…</a></p><p>缓存性</p><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub1s.com%2Fvuejs%2Fcore%2Fblob%2FHEAD%2Fpackages%2Freactivity%2Fsrc%2Fcomputed.ts%23L59-L60" target="_blank" rel="noopener noreferrer">github1s.com/vuejs/core/…</a></p><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub1s.com%2Fvuejs%2Fcore%2Fblob%2FHEAD%2Fpackages%2Freactivity%2Fsrc%2Fcomputed.ts%23L45-L46" target="_blank" rel="noopener noreferrer">github1s.com/vuejs/core/…</a></p><p>watch的实现</p><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub1s.com%2Fvuejs%2Fcore%2Fblob%2FHEAD%2Fpackages%2Fruntime-core%2Fsrc%2FapiWatch.ts%23L158-L159" target="_blank" rel="noopener noreferrer">github1s.com/vuejs/core/…</a></p><hr><h2 id=""></h2>',31)];s.render=function(a,e,s,o,c,r){return t(),n("div",null,p)};export default s;export{e as __pageData};
