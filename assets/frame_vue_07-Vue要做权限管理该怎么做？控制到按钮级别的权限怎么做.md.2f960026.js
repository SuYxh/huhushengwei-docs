import{o as n,c as s,b as a}from"./app.157864df.js";const t='{"title":"07-Vue要做权限管理该怎么做？控制到按钮级别的权限怎么做？","description":"","frontmatter":{},"headers":[{"level":2,"title":"07-Vue要做权限管理该怎么做？控制到按钮级别的权限怎么做？","slug":"_07-vue要做权限管理该怎么做？控制到按钮级别的权限怎么做？"},{"level":3,"title":"分析","slug":"分析"},{"level":3,"title":"思路","slug":"思路"},{"level":3,"title":"回答范例","slug":"回答范例"},{"level":3,"title":"知其所以然","slug":"知其所以然"},{"level":3,"title":"可能的追问","slug":"可能的追问"},{"level":2,"title":"","slug":""}],"relativePath":"frame/vue/07-Vue要做权限管理该怎么做？控制到按钮级别的权限怎么做.md","lastUpdated":1662083353135}',p={},o=[a('<h2 id="_07-vue要做权限管理该怎么做？控制到按钮级别的权限怎么做？">07-Vue要做权限管理该怎么做？控制到按钮级别的权限怎么做？</h2><h3 id="分析">分析</h3><p>综合实践题目，实际开发中经常需要面临权限管理的需求，考查实际应用能力。</p><p>权限管理一般需求是两个：页面权限和按钮权限，从这两个方面论述即可。</p><p><img src="https://qn.huat.xyz/mac/20220828183850.awebp" alt="img"></p><hr><h3 id="思路">思路</h3><ol><li>权限管理需求分析：页面和按钮权限</li><li>权限管理的实现方案：分后端方案和前端方案阐述</li><li>说说各自的优缺点</li></ol><hr><h3 id="回答范例">回答范例</h3><ol><li><p>权限管理一般需求是<strong>页面权限</strong>和<strong>按钮权限</strong>的管理</p></li><li><p>具体实现的时候分后端和前端两种方案：</p><p>前端方案会<strong>把所有路由信息在前端配置</strong>，通过路由守卫要求用户登录，用户<strong>登录后根据角色过滤出路由表</strong>。比如我会配置一个<code>asyncRoutes</code>数组，需要认证的页面在其路由的<code>meta</code>中添加一个<code>roles</code>字段，等获取用户角色之后取两者的交集，若结果不为空则说明可以访问。此过滤过程结束，剩下的路由就是该用户能访问的页面，<strong>最后通过<code>router.addRoutes(accessRoutes)</code>方式动态添加路由</strong>即可。</p><p>后端方案会<strong>把所有页面路由信息存在数据库</strong>中，用户登录的时候根据其角色<strong>查询得到其能访问的所有页面路由信息</strong>返回给前端，前端<strong>再通过<code>addRoutes</code>动态添加路由</strong>信息</p><p>按钮权限的控制通常会<strong>实现一个指令</strong>，例如<code>v-permission</code>，<strong>将按钮要求角色通过值传给v-permission指令</strong>，在指令的<code>moutned</code>钩子中可以<strong>判断当前用户角色和按钮是否存在交集</strong>，有则保留按钮，无则移除按钮。</p></li><li><p>纯前端方案的优点是实现简单，不需要额外权限管理页面，但是维护起来问题比较大，有新的页面和角色需求就要修改前端代码重新打包部署；服务端方案就不存在这个问题，通过专门的角色和权限管理页面，配置页面和按钮权限信息到数据库，应用每次登陆时获取的都是最新的路由信息，可谓一劳永逸！</p></li></ol><hr><h3 id="知其所以然">知其所以然</h3><p>路由守卫</p><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub1s.com%2FPanJiaChen%2Fvue-element-admin%2Fblob%2FHEAD%2Fsrc%2Fpermission.js%23L13-L14" target="_blank" rel="noopener noreferrer">github1s.com/PanJiaChen/…</a></p><p>路由生成</p><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub1s.com%2FPanJiaChen%2Fvue-element-admin%2Fblob%2FHEAD%2Fsrc%2Fstore%2Fmodules%2Fpermission.js%23L50-L51" target="_blank" rel="noopener noreferrer">github1s.com/PanJiaChen/…</a></p><p>动态追加路由</p><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub1s.com%2FPanJiaChen%2Fvue-element-admin%2Fblob%2FHEAD%2Fsrc%2Fpermission.js%23L43-L44" target="_blank" rel="noopener noreferrer">github1s.com/PanJiaChen/…</a></p><hr><h3 id="可能的追问">可能的追问</h3><ol><li><p>类似<code>Tabs</code>这类组件能不能使用<code>v-permission</code>指令实现按钮权限控制？</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-tabs</span><span class="token punctuation">&gt;</span></span> \n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-tab-pane</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>⽤户管理<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>first<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>⽤户管理<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-tab-pane</span><span class="token punctuation">&gt;</span></span> \n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-tab-pane</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>⻆⾊管理<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>third<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>⻆⾊管理<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-tab-pane</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-tabs</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div></li></ol><hr><ol><li><p>服务端返回的路由信息如何添加到路由器中？</p><div class="language-js"><pre><code><span class="token comment">// 前端组件名和组件映射表</span>\n<span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//xx: require(&#39;@/views/xx.vue&#39;).default // 同步的⽅式</span>\n  <span class="token function-variable function">xx</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/xx.vue&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 异步的⽅式</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 服务端返回的asyncRoutes</span>\n<span class="token keyword">const</span> asyncRoutes <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;/xx&#39;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> <span class="token string">&#39;xx&#39;</span><span class="token punctuation">,</span><span class="token operator">...</span> <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n<span class="token comment">// 遍历asyncRoutes，将component替换为map[component]</span>\n<span class="token keyword">function</span> <span class="token function">mapComponent</span><span class="token punctuation">(</span><span class="token parameter">asyncRoutes</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  asyncRoutes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">route</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    route<span class="token punctuation">.</span>component <span class="token operator">=</span> map<span class="token punctuation">[</span>route<span class="token punctuation">.</span>component<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>route<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      route<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">child</span> <span class="token operator">=&gt;</span> <span class="token function">mapComponent</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token function">mapComponent</span><span class="token punctuation">(</span>asyncRoutes<span class="token punctuation">)</span>\n</code></pre></div></li></ol><hr><h2 id=""></h2>',26)];p.render=function(a,t,p,e,c,l){return n(),s("div",null,o)};export default p;export{t as __pageData};
