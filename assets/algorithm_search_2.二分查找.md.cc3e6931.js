import{o as n,c as s,b as a}from"./app.157864df.js";const p='{"title":"二分查找","description":"","frontmatter":{},"headers":[{"level":2,"title":"二分查找","slug":"二分查找"},{"level":3,"title":"代码","slug":"代码"}],"relativePath":"algorithm/search/2.二分查找.md","lastUpdated":1662433250869}',t={},e=[a('<h2 id="二分查找">二分查找</h2><h3 id="代码">代码</h3><div class="language-ts"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">binarySearch1</span><span class="token punctuation">(</span>arr<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> target<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> length <span class="token operator">=</span> arr<span class="token punctuation">.</span>length\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>\n\n  <span class="token keyword">let</span> startIndex <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">// 开始位置</span>\n  <span class="token keyword">let</span> endIndex <span class="token operator">=</span> length <span class="token operator">-</span> <span class="token number">1</span> <span class="token comment">// 结束位置</span>\n\n  <span class="token keyword">while</span> <span class="token punctuation">(</span>startIndex <span class="token operator">&lt;=</span> endIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> midIndex <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>startIndex <span class="token operator">+</span> endIndex<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> midValue <span class="token operator">=</span> arr<span class="token punctuation">[</span>midIndex<span class="token punctuation">]</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">&lt;</span> midValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 目标值较小，则继续在左侧查找</span>\n      endIndex <span class="token operator">=</span> midIndex <span class="token operator">-</span> <span class="token number">1</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">&gt;</span> midValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 目标值较大，则继续在右侧查找</span>\n      startIndex <span class="token operator">=</span> midIndex <span class="token operator">+</span> <span class="token number">1</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 相等，返回</span>\n      <span class="token keyword">return</span> midIndex\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',3)];t.render=function(a,p,t,o,c,l){return n(),s("div",null,e)};export default t;export{p as __pageData};
