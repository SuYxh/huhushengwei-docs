import{o as n,c as s,b as a}from"./app.157864df.js";const t='{"title":"如果让你从零开始写一个vuex，说说你的思路","description":"","frontmatter":{},"headers":[{"level":2,"title":"如果让你从零开始写一个vuex，说说你的思路","slug":"如果让你从零开始写一个vuex，说说你的思路"},{"level":3,"title":"思路分析","slug":"思路分析"},{"level":3,"title":"回答范例","slug":"回答范例"},{"level":3,"title":"实践","slug":"实践"},{"level":3,"title":"知其所以然","slug":"知其所以然"}],"relativePath":"frame/vue/40-如果让你从零开始写一个vuex，说说你的思路.md","lastUpdated":1662433250873}',o={},e=[a('<h2 id="如果让你从零开始写一个vuex，说说你的思路">如果让你从零开始写一个vuex，说说你的思路</h2><h3 id="思路分析">思路分析</h3><p>这个题目很有难度，首先思考<code>vuex</code>解决的问题：存储用户全局状态并提供管理状态API。</p><ul><li><code>vuex</code>需求分析</li><li>如何实现这些需求</li></ul><hr><h3 id="回答范例">回答范例</h3><ol><li>官方说<code>vuex</code>是一个状态管理模式和库，并确保这些状态以可预期的方式变更。可见要实现一个<code>vuex</code>： <ul><li>要实现一个<code>Store</code>存储全局状态</li><li>要提供修改状态所需API：<code>commit(type, payload)</code>, <code>dispatch(type, payload)</code></li></ul></li><li>实现<code>Store</code>时，可以定义Store类，构造函数接收选项options，设置属性state对外暴露状态，提供commit和dispatch修改属性state。这里需要设置state为响应式对象，同时将Store定义为一个Vue插件。</li><li><code>commit(type, payload)</code>方法中可以获取用户传入<code>mutations</code>并执行它，这样可以按用户提供的方法修改状态。 <code>dispatch(type, payload)</code>类似，但需要注意它可能是异步的，需要返回一个Promise给用户以处理异步结果。</li></ol><hr><h3 id="实践">实践</h3><p>Store的实现：</p><div class="language-kotlin"><pre><code><span class="token keyword">class</span> Store <span class="token punctuation">{</span>\n    <span class="token keyword">constructor</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>state<span class="token punctuation">)</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>options <span class="token operator">=</span> options\n    <span class="token punctuation">}</span>\n    <span class="token function">commit</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> payload<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>mutations<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">,</span> payload<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n复制代码\n</code></pre></div><h3 id="知其所以然">知其所以然</h3><p>Vuex中Store的实现：</p><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub1s.com%2Fvuejs%2Fvuex%2Fblob%2FHEAD%2Fsrc%2Fstore.js%23L19-L20" target="_blank" rel="noopener noreferrer">github1s.com/vuejs/vuex/…</a></p>',14)];o.render=function(a,t,o,p,c,l){return n(),s("div",null,e)};export default o;export{t as __pageData};
