import{o as e,c as o,b as d}from"./app.157864df.js";const t='{"title":"作用域和作用域链","description":"","frontmatter":{},"headers":[{"level":3,"title":"作用域和作用域链","slug":"作用域和作用域链"}],"relativePath":"guide/js/5.作用域和作用域链.md","lastUpdated":1662083353139}',p={},c=[d('<h3 id="作用域和作用域链">作用域和作用域链</h3><p>创建函数的时候，已经声明了当前函数的作用域==&gt;<code>当前创建函数所处的上下文</code>。如果是在全局下创建的函数就是<code>[[scope]]:EC(G)</code>，函数执行的时候，形成一个全新的私有上下文<code>EC(FN)</code>，供字符串代码执行(进栈执行)</p><p>定义：简单来说作用域就是变量与函数的可访问范围，<code>由当前环境与上层环境的一系列变量对象组成</code> 1.全局作用域：代码在程序的任何地方都能被访问，window 对象的内置属性都拥有全局作用域。 2.函数作用域：在固定的代码片段才能被访问</p><p>作用：作用域最大的用处就是<code>隔离变量</code>，不同作用域下同名变量不会有冲突。</p><p><strong>作用域链参考链接</strong>一般情况下，变量到 创建该变量 的函数的作用域中取值。但是如果在当前作用域中没有查到，就会向上级作用域去查，直到查到全局作用域，这么一个查找过程形成的链条就叫做作用域链。</p>',5)];p.render=function(d,t,p,r,s,_){return e(),o("div",null,c)};export default p;export{t as __pageData};
