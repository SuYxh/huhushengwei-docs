import{o as e,c as l,b as i}from"./app.157864df.js";const t='{"title":"10 - 你了解diff算法吗？","description":"","frontmatter":{},"headers":[{"level":2,"title":"10 - 你了解diff算法吗？","slug":"_10-你了解diff算法吗？"},{"level":3,"title":"分析","slug":"分析"},{"level":3,"title":"思路","slug":"思路"},{"level":3,"title":"回答范例","slug":"回答范例"},{"level":3,"title":"知其所以然","slug":"知其所以然"}],"relativePath":"frame/vue/10 - 你了解diff算法吗.md","lastUpdated":1662083353135}',r={},a=[i('<h2 id="_10-你了解diff算法吗？">10 - 你了解diff算法吗？</h2><h3 id="分析">分析</h3><p>必问题目，涉及vue更新原理，比较考查理解深度。</p><p><img src="https://qn.huat.xyz/mac/20220828184052.awebp" alt="img"></p><hr><h3 id="思路">思路</h3><ol><li>diff算法是干什么的</li><li>它的必要性</li><li>它何时执行</li><li>具体执行方式</li><li>拔高：说一下vue3中的优化</li></ol><hr><h3 id="回答范例">回答范例</h3><p>1.Vue中的diff算法称为patching算法，它由Snabbdom修改而来，虚拟DOM要想转化为真实DOM就需要通过patch方法转换。</p><p>2.最初Vue1.x视图中每个依赖均有更新函数对应，可以做到精准更新，因此并不需要虚拟DOM和patching算法支持，但是这样粒度过细导致Vue1.x无法承载较大应用；Vue 2.x中为了降低Watcher粒度，每个组件只有一个Watcher与之对应，此时就需要引入patching算法才能精确找到发生变化的地方并高效更新。</p><p>3.vue中diff执行的时刻是组件内响应式数据变更触发实例执行其更新函数时，更新函数会再次执行render函数获得最新的虚拟DOM，然后执行patch函数，并传入新旧两次虚拟DOM，通过比对两者找到变化的地方，最后将其转化为对应的DOM操作。</p><hr><p>4.patch过程是一个递归过程，遵循深度优先、同层比较的策略；以vue3的patch为例：</p><ul><li>首先判断两个节点是否为相同同类节点，不同则删除重新创建</li><li>如果双方都是文本则更新文本内容</li><li>如果双方都是元素节点则递归更新子元素，同时更新元素属性</li><li>更新子节点时又分了几种情况： <ul><li>新的子节点是文本，老的子节点是数组则清空，并设置文本；</li><li>新的子节点是文本，老的子节点是文本则直接更新文本；</li><li>新的子节点是数组，老的子节点是文本则清空文本，并创建新子节点数组中的子元素；</li><li>新的子节点是数组，老的子节点也是数组，那么比较两组子节点，更新细节blabla</li></ul></li></ul><ol><li>vue3中引入的更新策略：编译期优化patchFlags、block等</li></ol><hr><h3 id="知其所以然">知其所以然</h3><p>patch关键代码</p><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub1s.com%2Fvuejs%2Fcore%2Fblob%2FHEAD%2Fpackages%2Fruntime-core%2Fsrc%2Frenderer.ts%23L354-L355" target="_blank" rel="noopener noreferrer">github1s.com/vuejs/core/…</a></p><p>调试 <a href="https://link.juejin.cn/?target=text-v3.html" target="_blank" rel="noopener noreferrer">test-v3.html</a></p>',21)];r.render=function(i,t,r,p,h,u){return e(),l("div",null,a)};export default r;export{t as __pageData};
