import{o as s,c as a,b as e}from"./app.157864df.js";const n='{"title":"32-你知道vue-loader吗？","description":"","frontmatter":{},"headers":[{"level":2,"title":"32-你知道vue-loader吗？","slug":"_32-你知道vue-loader吗？"},{"level":3,"title":"分析","slug":"分析"},{"level":3,"title":"体验","slug":"体验"},{"level":3,"title":"思路","slug":"思路"},{"level":3,"title":"回答范例","slug":"回答范例"},{"level":3,"title":"知其所以然","slug":"知其所以然"},{"level":3,"title":"","slug":""}],"relativePath":"frame/vue/32-你知道vue-loader吗.md","lastUpdated":1662083353135}',t={},o=[e('<h2 id="_32-你知道vue-loader吗？">32-你知道vue-loader吗？</h2><h3 id="分析">分析</h3><p>这是一道工具类的原理题目，相当有深度，具有不错的人才区分度。</p><h3 id="体验">体验</h3><p>使用官方提供的SFC playground可以很好的体验vue-loader。</p><p>有了vue-loader加持，我们才可以以SFC的方式快速编写代码。</p><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fsfc.vuejs.org%2F%23eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cD5cbmltcG9ydCB7IHJlZiB9IGZyb20gJ3Z1ZSdcblxuY29uc3QgbXNnID0gcmVmKCdIZWxsbyBXb3JsZCEnKVxuPC9zY3JpcHQ%2BXG5cbjx0ZW1wbGF0ZT5cbiAgPGgxPnt7IG1zZyB9fTwvaDE%2BXG4gIDxpbnB1dCB2LW1vZGVsPVwibXNnXCI%2BXG48L3RlbXBsYXRlPiIsImltcG9ydC1tYXAuanNvbiI6IntcbiAgXCJpbXBvcnRzXCI6IHtcbiAgICBcInZ1ZVwiOiBcImh0dHBzOi8vc2ZjLnZ1ZWpzLm9yZy92dWUucnVudGltZS5lc20tYnJvd3Nlci5qc1wiXG4gIH1cbn0ifQ%3D%3D" target="_blank" rel="noopener noreferrer">sfc.vuejs.org</a></p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>example<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ msg }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      msg<span class="token operator">:</span> <span class="token string">&#39;Hello world!&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n<span class="token selector">.example</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h3 id="思路">思路</h3><ul><li><code>vue-loader</code>是什么东东</li><li><code>vue-loader</code>是做什么用的</li><li><code>vue-loader</code>何时生效</li><li><code>vue-loader</code>如何工作</li></ul><h3 id="回答范例">回答范例</h3><ol><li><code>vue-loader</code>是用于处理单文件组件（SFC，Single-File Component）的webpack loader</li><li>因为有了<code>vue-loader</code>，我们就可以在项目中编写SFC格式的Vue组件，我们可以把代码分割为<code>&lt;template&gt;</code>、<code>&lt;script&gt;</code>和<code>&lt;style&gt;</code>，代码会异常清晰。结合其他loader我们还可以用Pug编写<code>&lt;template&gt;</code>，用SASS编写<code>&lt;style&gt;</code>，用TS编写<code>&lt;script&gt;</code>。我们的<code>&lt;style&gt;</code>还可以单独作用当前组件。</li><li>webpack打包时，会以loader的方式调用<code>vue-loader</code></li><li><code>vue-loader</code>被执行时，它会对SFC中的每个语言块用单独的loader链处理。最后将这些单独的块装配成最终的组件模块。</li></ol><h3 id="知其所以然">知其所以然</h3><ol><li><code>vue-loader</code>会调用<code>@vue/compiler-sfc</code>模块解析SFC源码为一个描述符（Descriptor），然后为每个语言块生成import代码，返回的代码类似下面：</li></ol><div class="language-js"><pre><code><span class="token comment">// source.vue被vue-loader处理之后返回的代码</span>\n\n<span class="token comment">// import the &lt;template&gt; block</span>\n<span class="token keyword">import</span> render <span class="token keyword">from</span> <span class="token string">&#39;source.vue?vue&amp;type=template&#39;</span>\n<span class="token comment">// import the &lt;script&gt; block</span>\n<span class="token keyword">import</span> script <span class="token keyword">from</span> <span class="token string">&#39;source.vue?vue&amp;type=script&#39;</span>\n<span class="token keyword">export</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token string">&#39;source.vue?vue&amp;type=script&#39;</span>\n<span class="token comment">// import &lt;style&gt; blocks</span>\n<span class="token keyword">import</span> <span class="token string">&#39;source.vue?vue&amp;type=style&amp;index=1&#39;</span>\n\nscript<span class="token punctuation">.</span>render <span class="token operator">=</span> render\n<span class="token keyword">export</span> <span class="token keyword">default</span> script\n</code></pre></div><ol><li>我们想要script块中的内容被作为js处理（当然如果是<code>&lt;script lang=&quot;ts&quot;&gt;</code>被作为ts处理），这样我们想要webpack把配置中跟.js匹配的规则都应用到形如<code>source.vue?vue&amp;type=script</code>的这个请求上。例如我们对所有*.js配置了<code>babel-loader</code>，这个规则将被克隆并应用到所在Vue SFC的<code>&lt;script&gt;</code>块上。内部的请求如下：</li></ol><div class="language-js"><pre><code><span class="token keyword">import</span> script <span class="token keyword">from</span> <span class="token string">&#39;source.vue?vue&amp;type=script&#39;</span>\n</code></pre></div><p>将被展开为：</p><div class="language-js"><pre><code><span class="token keyword">import</span> script <span class="token keyword">from</span> <span class="token string">&#39;babel-loader!vue-loader!source.vue?vue&amp;type=script&#39;</span>\n</code></pre></div><p>类似的，如果我们对.sass文件配置了<code>style-loader</code> + <code>css-loader</code> + <code>sass-loader</code>，下面的代码：</p><div class="language-js"><pre><code><span class="token operator">&lt;</span>style scoped lang<span class="token operator">=</span><span class="token string">&quot;scss&quot;</span><span class="token operator">&gt;</span>\n</code></pre></div><p><code>vue-loader</code>将会返回给我们下面请求：</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token string">&#39;source.vue?vue&amp;type=style&amp;index=1&amp;scoped&amp;lang=scss&#39;</span>\n</code></pre></div><p>然后webpack会展开如下：</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token string">&#39;style-loader!css-loader!sass-loader!vue-loader!source.vue?vue&amp;type=style&amp;index=1&amp;scoped&amp;lang=scss&#39;</span>\n</code></pre></div><ol><li>当处理展开请求时，<code>vue-loader</code>将被再次调用。这次，loader将会关注那些有查询串的请求，且仅针对特定块，它会选中特定块内部的内容并传递给后面匹配的loader。</li><li>对于<code>&lt;script&gt;</code>块，处理到这就可以了，但是<code>&lt;template&gt;</code> 和 <code>&lt;style&gt;</code>还有一些额外任务要做，比如：</li></ol><ul><li>需要用Vue模板编译器编译<code>template</code>，从而得到<code>render</code>函数</li><li>需要对<code>&lt;style scoped&gt;</code>中的CSS做后处理（post-process），该操作在<code>css-loader</code>之后但在<code>style-loader</code>之前</li></ul><p>实现上，这些附加的loader需要被注入到已经展开的loader链上，最终的请求会像下面这样：</p><div class="language-js"><pre><code><span class="token comment">// &lt;template lang=&quot;pug&quot;&gt;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;vue-loader/template-loader!pug-loader!source.vue?vue&amp;type=template&#39;</span>\n\n<span class="token comment">// &lt;style scoped lang=&quot;scss&quot;&gt;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;style-loader!vue-loader/style-post-loader!css-loader!sass-loader!vue-loader!source.vue?vue&amp;type=style&amp;index=1&amp;scoped&amp;lang=scss&#39;</span>\n</code></pre></div><h3 id=""></h3>',30)];t.render=function(e,n,t,p,l,c){return s(),a("div",null,o)};export default t;export{n as __pageData};
